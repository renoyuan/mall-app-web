{"version":3,"file":"request.js","sources":["js_sdk/luch-request/request.js"],"sourcesContent":["/**\r\n * Request 1.0.5\r\n * @Class Request\r\n * @description luch-request 1.0.4 http请求插件\r\n * @Author lu-ch\r\n * @Date 2019-12-12\r\n * @Email webwork.s@qq.com\r\n * http://ext.dcloud.net.cn/plugin?id=392\r\n */\r\nexport default class Request {\r\n    config = {\r\n      baseUrl: '',\r\n      header: {\r\n        'content-type': 'application/json;charset=UTF-8'\r\n      },\r\n      method: 'GET',\r\n      dataType: 'json',\r\n      // #ifndef MP-ALIPAY || APP-PLUS\r\n      responseType: 'text',\r\n      // #endif\r\n      custom: {},\r\n      // #ifdef MP-ALIPAY\r\n      timeout: 30000,\r\n      // #endif\r\n      // #ifdef APP-PLUS\r\n      sslVerify: true\r\n      // #endif\r\n    }\r\n\r\n    static posUrl (url) { /* 判断url是否为绝对路径 */\r\n      return /(http|https):\\/\\/([\\w.]+\\/?)\\S*/.test(url)\r\n    }\r\n\r\n    static addQueryString (params) {\r\n      let paramsData = ''\r\n      Object.keys(params).forEach(function (key) {\r\n        paramsData += key + '=' + encodeURIComponent(params[key]) + '&'\r\n      })\r\n      return paramsData.substring(0, paramsData.length - 1)\r\n    }\r\n\r\n    /**\r\n     * @property {Function} request 请求拦截器\r\n     * @property {Function} response 响应拦截器\r\n     * @type {{request: Request.interceptor.request, response: Request.interceptor.response}}\r\n     */\r\n    interceptor = {\r\n      /**\r\n         * @param {Request~requestCallback} cb - 请求之前拦截,接收一个函数（config, cancel）=> {return config}。第一个参数为全局config,第二个参数为函数，调用则取消本次请求。\r\n         */\r\n      request: (cb) => {\r\n        if (cb) {\r\n          this.requestBeforeFun = cb\r\n        }\r\n      },\r\n      /**\r\n         * @param {Request~responseCallback} cb 响应拦截器，对响应数据做点什么\r\n         * @param {Request~responseErrCallback} ecb 响应拦截器，对响应错误做点什么\r\n         */\r\n      response: (cb, ecb) => {\r\n        if (cb && ecb) {\r\n          this.requestComFun = cb\r\n          this.requestComFail = ecb\r\n        }\r\n      }\r\n    }\r\n\r\n    requestBeforeFun (config) {\r\n      return config\r\n    }\r\n\r\n    requestComFun (response) {\r\n      return response\r\n    }\r\n\r\n    requestComFail (response) {\r\n      return response\r\n    }\r\n\r\n    /**\r\n     * 自定义验证器，如果返回true 则进入响应拦截器的响应成功函数(resolve)，否则进入响应拦截器的响应错误函数(reject)\r\n     * @param { Number } statusCode - 请求响应体statusCode（只读）\r\n     * @return { Boolean } 如果为true,则 resolve, 否则 reject\r\n     */\r\n    validateStatus (statusCode) {\r\n      return statusCode === 200\r\n    }\r\n\r\n    /**\r\n     * @Function\r\n     * @param {Request~setConfigCallback} f - 设置全局默认配置\r\n     */\r\n    setConfig (f) {\r\n      this.config = f(this.config)\r\n    }\r\n\r\n    /**\r\n     * @Function\r\n     * @param {Object} options - 请求配置项\r\n     * @prop {String} options.url - 请求路径\r\n     * @prop {Object} options.data - 请求参数\r\n     * @prop {Object} [options.responseType = config.responseType] [text|arraybuffer] - 响应的数据类型\r\n     * @prop {Object} [options.dataType = config.dataType] - 如果设为 json，会尝试对返回的数据做一次 JSON.parse\r\n     * @prop {Object} [options.header = config.header] - 请求header\r\n     * @prop {Object} [options.method = config.method] - 请求方法\r\n     * @returns {Promise<unknown>}\r\n     */\r\n    async request (options = {}) {\r\n      options.baseUrl = this.config.baseUrl\r\n      options.dataType = options.dataType || this.config.dataType\r\n      // #ifndef MP-ALIPAY || APP-PLUS\r\n      options.responseType = options.responseType || this.config.responseType\r\n      // #endif\r\n      // #ifdef MP-ALIPAY\r\n      options.timeout = options.timeout || this.config.timeout\r\n      // #endif\r\n      options.url = options.url || ''\r\n      options.data = options.data || {}\r\n      options.params = options.params || {}\r\n      options.header = options.header || this.config.header\r\n      options.method = options.method || this.config.method\r\n      options.custom = { ...this.config.custom, ...(options.custom || {}) }\r\n      // #ifdef APP-PLUS\r\n      options.sslVerify = options.sslVerify === undefined ? this.config.sslVerify : options.sslVerify\r\n      // #endif\r\n      return new Promise((resolve, reject) => {\r\n        let next = true\r\n\r\n        let handleRe = {}\r\n        options.complete = (response) => {\r\n          response.config = handleRe\r\n          if (this.validateStatus(response.statusCode)) { // 成功\r\n            response = this.requestComFun(response)\r\n            resolve(response)\r\n          } else {\r\n            response = this.requestComFail(response)\r\n            reject(response)\r\n          }\r\n        }\r\n        const cancel = (t = 'handle cancel', config = options) => {\r\n          const err = {\r\n            errMsg: t,\r\n            config: config\r\n          }\r\n          reject(err)\r\n          next = false\r\n        }\r\n\r\n        handleRe = { ...this.requestBeforeFun(options, cancel) }\r\n        const _config = { ...handleRe }\r\n        if (!next) return\r\n        delete _config.custom\r\n        let mergeUrl = Request.posUrl(_config.url) ? _config.url : (_config.baseUrl + _config.url)\r\n        if (JSON.stringify(_config.params) !== '{}') {\r\n          const paramsH = Request.addQueryString(_config.params)\r\n          mergeUrl += mergeUrl.indexOf('?') === -1 ? `?${paramsH}` : `&${paramsH}`\r\n        }\r\n        _config.url = mergeUrl\r\n        uni.request(_config)\r\n      })\r\n    }\r\n\r\n    get (url, options = {}) {\r\n      return this.request({\r\n        url,\r\n        method: 'GET',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    post (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'POST',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #ifndef MP-ALIPAY\r\n    put (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'PUT',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-BAIDU\r\n    delete (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'DELETE',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    // #ifdef APP-PLUS || H5 || MP-WEIXIN\r\n    connect (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'CONNECT',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-BAIDU\r\n    head (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'HEAD',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    // #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-BAIDU\r\n    options (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'OPTIONS',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    // #ifdef APP-PLUS || H5 || MP-WEIXIN\r\n    trace (url, data, options = {}) {\r\n      return this.request({\r\n        url,\r\n        data,\r\n        method: 'TRACE',\r\n        ...options\r\n      })\r\n    }\r\n\r\n    // #endif\r\n\r\n    upload (url, {\r\n      // #ifdef APP-PLUS\r\n      files,\r\n      // #endif\r\n      // #ifdef MP-ALIPAY\r\n      fileType,\r\n      // #endif\r\n      filePath,\r\n      name,\r\n      header,\r\n      formData,\r\n      custom\r\n    }) {\r\n      return new Promise((resolve, reject) => {\r\n        let next = true\r\n        let handleRe = {}\r\n        const globalHeader = { ...this.config.header }\r\n        delete globalHeader['content-type']\r\n        const pubConfig = {\r\n          baseUrl: this.config.baseUrl,\r\n          url,\r\n          // #ifdef APP-PLUS\r\n          files,\r\n          // #endif\r\n          // #ifdef MP-ALIPAY\r\n          fileType,\r\n          // #endif\r\n          filePath,\r\n          method: 'UPLOAD',\r\n          name,\r\n          header: header || globalHeader,\r\n          formData,\r\n          custom: { ...this.config.custom, ...(custom || {}) },\r\n          complete: (response) => {\r\n            response.config = handleRe\r\n            if (response.statusCode === 200) { // 成功\r\n              response = this.requestComFun(response)\r\n              resolve(response)\r\n            } else {\r\n              response = this.requestComFail(response)\r\n              reject(response)\r\n            }\r\n          }\r\n        }\r\n        const cancel = (t = 'handle cancel', config = pubConfig) => {\r\n          const err = {\r\n            errMsg: t,\r\n            config: config\r\n          }\r\n          reject(err)\r\n          next = false\r\n        }\r\n\r\n        handleRe = { ...this.requestBeforeFun(pubConfig, cancel) }\r\n        const _config = { ...handleRe }\r\n        if (!next) return\r\n        delete _config.custom\r\n        _config.url = Request.posUrl(_config.url) ? _config.url : (_config.baseUrl + _config.url)\r\n        uni.uploadFile(_config)\r\n      })\r\n    }\r\n}\r\n\r\n/**\r\n * setConfig回调\r\n * @return {Object} - 返回操作后的config\r\n * @callback Request~setConfigCallback\r\n * @param {Object} config - 全局默认config\r\n */\r\n/**\r\n * 请求拦截器回调\r\n * @return {Object} - 返回操作后的config\r\n * @callback Request~requestCallback\r\n * @param {Object} config - 全局config\r\n * @param {Function} [cancel] - 取消请求钩子，调用会取消本次请求\r\n */\r\n/**\r\n * 响应拦截器回调\r\n * @return {Object} - 返回操作后的response\r\n * @callback Request~responseCallback\r\n * @param {Object} response - 请求结果 response\r\n */\r\n/**\r\n * 响应错误拦截器回调\r\n * @return {Object} - 返回操作后的response\r\n * @callback Request~responseErrCallback\r\n * @param {Object} response - 请求结果 response\r\n */\r\n"],"names":["uni"],"mappings":"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"}