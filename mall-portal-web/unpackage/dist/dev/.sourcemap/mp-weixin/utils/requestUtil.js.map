{"version":3,"file":"requestUtil.js","sources":["utils/requestUtil.js"],"sourcesContent":["import Request from '@/js_sdk/luch-request/request.js'\nimport { API_BASE_URL} from '@/utils/appConfig.js';\n\nconst http = new Request()\n\nhttp.setConfig((config) => { /* 设置全局配置 */\n\tconfig.baseUrl = API_BASE_URL /* 根域名不同 */\n\tconfig.header = {\n\t\t...config.header\n\t}\n\treturn config\n})\n\n/**\n * 自定义验证器，如果返回true 则进入响应拦截器的响应成功函数(resolve)，否则进入响应拦截器的响应错误函数(reject)\n * @param { Number } statusCode - 请求响应体statusCode（只读）\n * @return { Boolean } 如果为true,则 resolve, 否则 reject\n */\nhttp.validateStatus = (statusCode) => {\n\treturn statusCode === 200\n}\n\nhttp.interceptor.request((config, cancel) => { /* 请求之前拦截器 */\n\tconst token = uni.getStorageSync('token');\n\tif(token){\n\t\tconfig.header = {\n\t\t\t'Authorization':token,\n\t\t\t...config.header\n\t\t}\n\t}else{\n\t\tconfig.header = {\n\t\t\t...config.header\n\t\t}\n\t}\n\t/*\n\tif (!token) { // 如果token不存在，调用cancel 会取消本次请求，但是该函数的catch() 仍会执行\n\t  cancel('token 不存在') // 接收一个参数，会传给catch((err) => {}) err.errMsg === 'token 不存在'\n\t}\n\t*/\n\treturn config\n})\n\nhttp.interceptor.response((response) => { /* 请求之后拦截器 */\n\tconst res = response.data;\n\tif (res.code !== 200) {\n\t\t//提示错误信息\n\t\tuni.showToast({\n\t\t\ttitle:res.message,\n\t\t\tduration:1500\n\t\t})\n\t\t//401未登录处理\n\t\tif (res.code === 401) {\n\t\t\tuni.showModal({\n\t\t\t\ttitle: '提示',\n\t\t\t\tcontent: '你已被登出，可以取消继续留在该页面，或者重新登录',\n\t\t\t\tconfirmText:'重新登录',\n\t\t\t\tcancelText:'取消',\n\t\t\t\tsuccess: function(res) {\n\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\tuni.navigateTo({\n\t\t\t\t\t\t\turl: '/pages/public/login'\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (res.cancel) {\n\t\t\t\t\t\tconsole.log('用户点击取消');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(response);\n\t} else {\n\t\treturn response.data;\n\t}\n}, (response) => {\n\t//提示错误信息\n\tconsole.log('response error', response);\n\tuni.showToast({\n\t\ttitle:response.errMsg,\n\t\tduration:1500\n\t})\n\treturn Promise.reject(response);\n})\n\nexport function request (options = {}) {\n\treturn http.request(options);\n}\n\nexport default request"],"names":["Request","API_BASE_URL","uni","res"],"mappings":";;;;AAGA,MAAM,OAAO,IAAIA,2BAAAA,QAAS;AAE1B,KAAK,UAAU,CAAC,WAAW;AAC1B,SAAO,UAAUC,gBAAY;AAC7B,SAAO,SAAS;AAAA,IACf,GAAG,OAAO;AAAA,EACV;AACD,SAAO;AACR,CAAC;AAOD,KAAK,iBAAiB,CAAC,eAAe;AACrC,SAAO,eAAe;AACvB;AAEA,KAAK,YAAY,QAAQ,CAAC,QAAQ,WAAW;AAC5C,QAAM,QAAQC,cAAAA,MAAI,eAAe,OAAO;AACxC,MAAG,OAAM;AACR,WAAO,SAAS;AAAA,MACf,iBAAgB;AAAA,MAChB,GAAG,OAAO;AAAA,IACV;AAAA,EACH,OAAM;AACJ,WAAO,SAAS;AAAA,MACf,GAAG,OAAO;AAAA,IACV;AAAA,EACD;AAMD,SAAO;AACR,CAAC;AAED,KAAK,YAAY,SAAS,CAAC,aAAa;AACvC,QAAM,MAAM,SAAS;AACrB,MAAI,IAAI,SAAS,KAAK;AAErBA,kBAAAA,MAAI,UAAU;AAAA,MACb,OAAM,IAAI;AAAA,MACV,UAAS;AAAA,IACZ,CAAG;AAED,QAAI,IAAI,SAAS,KAAK;AACrBA,oBAAAA,MAAI,UAAU;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,QACT,aAAY;AAAA,QACZ,YAAW;AAAA,QACX,SAAS,SAASC,MAAK;AACtB,cAAIA,KAAI,SAAS;AAChBD,0BAAAA,MAAI,WAAW;AAAA,cACd,KAAK;AAAA,YACZ,CAAO;AAAA,UACP,WAAgBC,KAAI,QAAQ;AACtBD,0BAAAA,MAAY,MAAA,OAAA,8BAAA,QAAQ;AAAA,UACpB;AAAA,QACD;AAAA,MACL,CAAI;AAAA,IACD;AACD,WAAO,QAAQ,OAAO,QAAQ;AAAA,EAChC,OAAQ;AACN,WAAO,SAAS;AAAA,EAChB;AACF,GAAG,CAAC,aAAa;AAEhBA,gBAAY,MAAA,MAAA,OAAA,8BAAA,kBAAkB,QAAQ;AACtCA,gBAAAA,MAAI,UAAU;AAAA,IACb,OAAM,SAAS;AAAA,IACf,UAAS;AAAA,EACX,CAAE;AACD,SAAO,QAAQ,OAAO,QAAQ;AAC/B,CAAC;AAEM,SAAS,QAAS,UAAU,IAAI;AACtC,SAAO,KAAK,QAAQ,OAAO;AAC5B;;"}